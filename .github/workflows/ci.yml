name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.12"

jobs:
  code-quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        version: 3.x

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: task install

    - name: Run pre-commit hooks
      run: task pre-commit

    - name: Run security scan
      run: task security

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: bandit-report.json

  test:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          # Windows sometimes has issues with uv, test core platforms first
          - os: windows-latest
            python-version: "3.13"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        version: 3.x

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: task install

    - name: Lint with ruff
      run: task lint

    - name: Type check with mypy
      run: task type-check

    - name: Run unit tests
      run: task test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [code-quality, test]
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        version: 3.x

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: task install

    - name: Run end-to-end tests
      run: task test-e2e

  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: uv sync --group dev --frozen

    - name: Run safety check
      run: |
        uv run pip install safety
        uv run safety check

  build-test:
    name: Build & Package Test
    runs-on: ubuntu-latest
    needs: [code-quality]
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for hatch-vcs

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Build package
      run: uv build

    - name: Test package installation
      run: |
        uv run pip install dist/*.whl
        uv run sparkinsight-ai --help

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
